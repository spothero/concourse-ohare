#@ load("@ytt:data", "data")

resource_types:
- name: concourse-pipeline
  type: registry-image
  source:
    repository: concourse/concourse-pipeline-resource

resources:
- name: src
  type: git
  icon: github-circle
  source:
    branch: master
    uri: <monorepo_url>

- name: internal-concourse
  type: concourse-pipeline
  icon: airplane-takeoff
  source:
    target: <concourse_instance_url>
    teams:
    #@ teams = [pipeline.team for pipeline in data.values.pipelines]
    #@ for team in set(teams):
      - name: #@ team
        username: ((global_concourse_username))
        password: ((global_concourse_password))
    #@ end

#@yaml/text-templated-strings
jobs:
- name: self-updater
  plan:
  - get: src
    trigger: true
  - task: pipeline-generator
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: spothero/concourse-ohare
      run:
        path: pipeline-generator
      inputs:
        - name: src
      outputs:
        - name: root
          path: output
  - put: internal-concourse
    params:
      pipelines:
      - name: ord
        team: main
        config_file: root/pipeline.yml

#@ for pipeline in data.values.pipelines:
- name: "(@= pipeline.team @)-(@= pipeline.name @)"
  plan:
  - get: src
    trigger: true
    passed: [self-updater]
  - task: "build-(@= pipeline.name @)"
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: spothero/concourse-ohare
      run:
        path: pipeline-generator
      inputs:
        - name: src
      outputs:
        - name: "(@= pipeline.name @)-output"
          path: output
      params:
        CONTEXT: "pipelines/(@= pipeline.team @)/(@= pipeline.name @)"
  - put: internal-concourse
    params:
      pipelines:
      - name: "(@= pipeline.name @)"
        team: "(@= pipeline.team @)"
        config_file: "(@= pipeline.name @)-output/pipeline.yml"
#@ end

